def greet(): #Приветствие и правила
    print("-------------------")
    print("  Приветсвуем вас  ")
    print("      в игре       ")
    print("  крестики-нолики  ")
    print("-------------------")
    print(" формат ввода: x y ")
    print(" x - номер строки  ")
    print(" y - номер столбца ")

def show(): #Функция для вывода на экран поля игры
    print()
    print('----------------')
    print(f'   | 0 | 1 | 2 |')
    for i in range(3):
        print('----------------')
        print(f' {i} | {field[i][0]} | {field[i][1]} | {field[i][2]} |') #Вывод на экран строк поля игры
    print('----------------')

def ask(): #Запрос координат у игроков
    while True:
        cords = input(" Введите 2 координаты: ").split() #Запрашиваем координаты

        if len(cords) !=2: #Проверка что игрок ввел 2 координаты, если нет - просим ввести 2 координаты
            print("Необходимо указать 2 коордитнаты!")
            continue

        x, y = cords # присваиваем x и y значения координат

        if not(x.isdigit()) or not (y.isdigit()): #Проверяем, являются ли данные значения числами, если нет - просим ввести числа
            print("Необходимо указать числа!")
            continue
        x, y = int(x), int(y) #Приводим x и y  к типу данных int Для проверки условий

        if 0 <= x <= 2 and 0 <= y <= 2: #Проверяем, лежат ли введенные координаты в диапозоне
            if field[x][y] == " ": #проверяем, пустая ли клетка по данным координатам
                return x, y
            else:
                print("Клетка занята")
                continue
        else:
            print("Вы казали координаты вне диапозона")
            continue
        return x, y

def check_win(): # функция для определения победителя
    win_cord = [((0,0), (0,1), (0,2)), ((1,0), (1,1), (1,2)), ((2,0), (2,1), (2,2)),
                ((0,0), (1,0), (2,0)), ((0,1), (1,1), (2,1)), ((0,2), (1,2), (2,2)),
                ((0,0), (1,1), (2,2)), ((2,0), (1,1), (0,2))] #координаты точек, которые дают победу
    for cord in win_cord:
        a, b, c = cord[0], cord[1], cord[2]
        if field[a[0]][a[1]] == field[b[0]][b[1]] == field[c[0]][c[1]] != " ": #Здесь мы проверям, если клетки заполнены одинаковыми знаками Х или 0, то значит что игрок N выиграл.
            print(f'Выиграл{field[a[0]][a[1]]}')
            return True
    return False

greet()

field = [[" "] * 3 for i in range(3)]
num = 0 #Подсчитываем число шагов, т.к. в игре ограниченное число шагов а именно 9
while True: #Цикл, который позволяет нам выполнять программу до того момента, пока не сработает break по одному из условий
    num += 1

    show() #После каждого ввода координат выводится обновленнная табоица

    if num % 2 == 1:
        print("Ходит крестик")
    else:
        print("Ходит нолик")

    x, y = ask()

    if num % 2 == 1:
        field[x][y] = "X"
    else:
        field[x][y] = "0"
    if check_win():
        break
    if num == 9:
        print("Ничья")
        break